{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["defaultConfiguration","sizes","min","max","code","Number","mobileSizeCodes","mobileSizes","useState","screenWidth","setScreenWidth","sizeCode","setSizeCode","isMobileSize","useCallback","getSizeCode","size","sizeConfiguration","updateScreenWidth","window","useLayoutEffect","useEffect","isMobile","App","useSizeQuery","toString","ReactDOM","render","document","getElementById"],"mappings":"6LAEMA,EAAuB,CAC3BC,MAAO,CACL,CACEC,IADF,EAEEC,IAFF,IAGEC,KAAM,MAER,CACEF,IADF,IAEEC,IAFF,IAGEC,KAAM,MAER,CACEF,IADF,IAEEC,IAFF,IAGEC,KAAM,MAER,CACEF,IADF,IAEEC,IAFF,KAGEC,KAAM,MAER,CACEF,IADF,KAEEC,IAAKE,OAFP,iBAGED,KAAM,OAGVE,gBAAiB,CAAC,KAAD,O,EAME,SAAC,GAGT,iBAAP,GAAO,MAFTL,aAES,MAFDD,EAAqBC,MAEpB,MADTM,mBACS,MADKP,EAAqBM,gBAC1B,IAE2BE,mBAF3B,GAEJC,EAFI,KAESC,EAFT,OAGqBF,mBAHrB,MAGJG,EAHI,KAGMC,EAHN,KAKLC,EAAeC,uBAAY,WAC/B,YAIA,OAAOP,QAAP,IAAOA,OAAP,EAAOA,WAAP,MACC,CANH,IAQMQ,EAAcD,uBAAY,YAC9B,GAAGL,KAAmBA,EAAcJ,OAApC,iBACE,YAGF,IAAMW,EAAOf,EAAA,QAAa,SAAAgB,GACxB,OAAOR,GAAeQ,EAAfR,KAAwCA,EAAcQ,EAA7D,OADF,GAIA,cAAOD,QAAP,IAAOA,OAAP,EAAOA,EAAP,OACC,CAVH,IAYME,EAAoBJ,uBAAY,WACpCJ,EAAeS,OAAfT,cACC,CAACS,OAFJ,aAiBA,OAbAC,2BAAgB,WAId,OAHAF,IACAC,oCAEO,WACLA,0CALJC,IASAC,qBAAU,WACRT,EAAYG,EAAZH,MACC,CAFHS,IAIO,CACLL,KADK,EAELM,SAAUT,EAAaF,KCjEZY,EAfH,WAAO,IAAD,EACWC,IAAnBR,EADQ,EACRA,KAAMM,EADE,EACFA,SAEd,OACE,oCACE,qCACSN,GAET,yCACaM,EAASG,cCN5BC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e111de4f.chunk.js","sourcesContent":["import { useState, useLayoutEffect, useEffect, useCallback } from 'react'\n\nconst defaultConfiguration = {\n  sizes: [\n    {\n      min: 0,\n      max: 576,\n      code: 'xs'\n    },\n    {\n      min: 576,\n      max: 768,\n      code: 'sm'\n    },\n    {\n      min: 768,\n      max: 992,\n      code: 'md'\n    },\n    {\n      min: 992,\n      max: 1200,\n      code: 'lg'\n    },\n    {\n      min: 1200,\n      max: Number.MAX_SAFE_INTEGER,\n      code: 'xl'\n    },\n  ],\n  mobileSizeCodes: [\n    'xs',\n    'sm'\n  ]\n}\n\nconst useSizeQuery = ({\n    sizes = defaultConfiguration.sizes, \n    mobileSizes = defaultConfiguration.mobileSizeCodes \n  } = {}) => {\n\n  const [screenWidth, setScreenWidth] = useState(0);\n  const [sizeCode, setSizeCode] = useState(null);\n\n  const isMobileSize = useCallback(() => {\n    if (!sizeCode) {\n      return false;\n    }\n\n    return mobileSizes?.includes(sizeCode);\n  }, [sizeCode]);\n\n  const getSizeCode = useCallback((screenWidth) => {\n    if(screenWidth < 0 || screenWidth > Number.MAX_SAFE_INTEGER) {\n      return null;\n    }\n\n    const size = sizes.filter(sizeConfiguration => {\n      return screenWidth >= sizeConfiguration.min && screenWidth < sizeConfiguration.max;\n    })[0];\n    \n    return size?.code;\n  }, [screenWidth]);\n\n  const updateScreenWidth = useCallback(() => {\n    setScreenWidth(window.innerWidth);\n  }, [window.innerWidth]);\n\n  useLayoutEffect(() => {\n    updateScreenWidth();\n    window.addEventListener('resize', updateScreenWidth);\n    \n    return () => {\n      window.removeEventListener('resize', updateScreenWidth);\n    }\n  }, []);\n\n  useEffect(() => {\n    setSizeCode(getSizeCode(screenWidth));\n  }, [screenWidth]);\n\n  return {\n    size: sizeCode,\n    isMobile: isMobileSize(sizeCode)\n  }\n};\n\nexport default useSizeQuery;","import React from 'react'\nimport useSizeQuery from 'screen-size-query';\n\nconst App = () => {\n  const { size, isMobile } = useSizeQuery();\n\n  return (\n    <>\n      <h1>\n        Size: {size}\n      </h1>\n      <h1>\n        IsMobile: {isMobile.toString()}\n      </h1>\n    </>\n  )\n}\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}